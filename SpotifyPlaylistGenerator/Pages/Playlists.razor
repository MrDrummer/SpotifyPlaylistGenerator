@using SpotifyAPI.Web
@using SpotifyPlaylistGenerator.Models.Interfaces
@using SpotifyPlaylistGenerator.Models.Models
@inject AuthenticationStateProvider AuthenticationStateProvider
@using System.Security.Claims
@inject IPlaylistService Playlist

@page "/playlists"

<h3>Playlists</h3>

@if (_playlists == null)
{
    <p>Loading...</p>
}
else
{
    <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row row-cols-xl-4 row-cols-xxl-5 row-cols-auto g-4">
        @foreach (var playlist in _playlists)
        {
            <PlaylistListItem Playlist="playlist"/>
        }
    </div>
}



@code {
    private SpotifyClient _spotify;

    private IEnumerable<Playlist>? _playlists;
    
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        var userId = user.FindFirstValue(ClaimTypes.NameIdentifier);

        if (userId == null) return;
        
        var playlists = await Playlist.GetUserPlaylists(userId);
        
        Console.WriteLine("Playlists acquired!");

        _playlists = playlists.ToList();
        
        StateHasChanged();
    }
}